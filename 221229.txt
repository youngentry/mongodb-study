요청 4가지 방식
GET 읽기
POST 쓰기
PUT 수정
DELETE 삭제

GET은 쉽게 말해
/manage 페이지를 GET 요청하면 manage.html 파일을 보내 화면에 그릴 수 있도록 하는 것
/manage 페이지를 GET 요청한다 => (https//site.com/manage)를 url 주소창에 입력하는 행위






Node.js는 브라우저를 통하지 않고도 js를 컴퓨터로 실행할 수 있도록 했다.
특징: Non-Blocking-io을 통해 요청을 전부 다 받고, 처리가 끝나는 대로 결과를 보내준다
=> 요청이 매우 많은 SNS 서비스에 매우 유용하다.






express 라이브러리 설치하기
npm init을 입력하고 entry point는 server.js 로 설정해준다.
npm i express로 express 설치하기







server.js 파일 만들기
const express = require("express"); // 라이브러리를 쓸게요.
const app = express(); // express 객체 생성할게요.

const PORT = 8080;

// 8080 포트에 서버를 연결하고, callback 실행할게요.
app.listen(PORT, () => {
    console.log(`${PORT} 서버에 연결되었습니다.`);
});

// '테스트'로 접속하면 callback 실행할게요.
app.get("/테스트", (요청, 응답) => {
    // 화면에 "테스트 페이지입니다."를 그려주세요.
    // => "test.html"을 보내면? /test에서 test.html파일을 렌더링 한다.
    응답.send("테스트 페이지입니다.");
});








nodemon: 자동으로 서버 재실행 하기 위함
npm i -g nodemon // -g는 모든 폴더에서 실행하기
*에러*
nodemon : 이 시스템에서 스크립트를 실행할 수 없으므로 ... 어쩌고

이럴 때는 executionpolicy를 쳐보면 권한이 제한되어 있음을 확인.
PS C:\Windows\system32> executionpolicy
Restricted

이 권한을 제한하지 않도록 하면 다른 js 스크립트를 실행할 수 있게 된다.
PS C:\Windows\system32> set-executionpolicy unrestricted






파일 GET 주소로 보내기는 sendFile() 메서드를 아래와 같이 작성합니다.
app.get("/", (요청, 응답) => {
    응답.sendFile(__dirname + "/index.html");
});







form이 서버와 통신하는 방법. action은 "/add" 주소로 method는 POST를 해주세요. 
input태그의 name에 저장한 title로 값을 가져올 수 있다.
      <form action="/add" method="POST">
          <input type="text" class="form-control" name="title" />
      </form>







// html에서 "/경로"로 POST요청을 하면, callback 함수를 실행해주세요.
// 이용자가 입력한 값은 (요청)에 object type으로 저장된다.
// 값을 가져오려면 상단에 app.use(express.urlencoded({extended: true})) 추가 해야됨
app.post("/경로", (요청, 응답) => {
  응답.send("/add로 POST 전송 성공했다");
  console.log(요청.body.title);
});






웹개발에서 API란? 웹서버와 고객간에 소통하는 방법
RESTful API의 원칙 중 기억해야할 것 3가지

1. Uniform Interface
하나의 자료는 하나의 url로 보낸다.
url하나를 알면 둘을 알 수 있어야 한다.?
요청과 응답은 정보가 충분히 들어있어야 한다.

2. Client-Server역할 구분
브라우저는 요청만
서버는 응답만

3. Stateless
요청1과 요청2는 연관이 없어야 한다. 
(요청1을 하여 요청2를 해야하는 등의 의존성을 없애라.)






좋은 REST API 이름짓기 원칙(유명한 사이트 주소 따라 하면 된다.)
URL은 명사로 작성
하위문서는 /로 
파일확장자(.html) 쓰지 말기
띄어쓰기는 대시(-)이용
자료 하나에 하나의 URL




















