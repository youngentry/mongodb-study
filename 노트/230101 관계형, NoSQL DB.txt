관계형스러운 데이터 저장 방식
게시물과 댓글을 한 collection에 모아서 저장하지 않고

게시물 collection
댓글 collection을 구분합니다.

1번 게시물에 있는 댓글을 찾을 수 있도록
댓글 collection에서 1번 게시물이 부모라는 표시를 남겨줍니다.

1번 게시물과 부모게시물이 1번인 댓글들을 골라내는 방식으로 분산되어있는 정보들을 찾아옵니다.






게시물에 유니크한 id를 주는 방법
id를 저장할 collection를 별도로 만듭니다.

데이터를 추가합니다.
{_id: 랜덤생성, totalPost: 0, name: 게시물갯수}






id를 저장한 데이터를 불러옵니다.
    db.collection("counter").findOne({ name: "게시물수" }, (에러, 결과) => {
      const 총게시물갯수 = 결과.totalPost;
	
	=> counter collection에서 {name:'게시물수'} 를 찾는다. 그리고 총게시물갯수 변수에 저장한다.
	
생성한 id를 넣어 게시물을 데이터에 추가합니다. 
      db.collection("post").insertOne({ _id: 총게시물갯수, 제목: 요청.body.title, 날짜: 요청.body.date }, (에러, 결과) => {
        console.log("저장완료");

데이터 수정하기: id를 +1 해줍니다.
        결과.totalPost 의 값을 +1 해주어야 다음에 생성할 때 id가 겹치지 않는다
        $set 연산자: 바꿔주세요. $inc: 증가시켜주세요
        db.collection("counter").updateOne({ 수정할데이터 }, { $inc: { 수정값 } }, (에러, 결과) => {
          if (에러) return console.log(에러);
          
          
          
          
          
          
          
          
          
          
